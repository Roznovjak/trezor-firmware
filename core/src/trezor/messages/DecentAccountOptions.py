# Automatically generated by pb2py
# fmt: off
import protobuf as p

from .DecentAccountId import DecentAccountId
from .DecentAsset import DecentAsset

if __debug__:
    try:
        from typing import List
    except ImportError:
        List = None  # type: ignore


class DecentAccountOptions(p.MessageType):

    def __init__(
        self,
        memo_key: bytes = None,
        voting_account: DecentAccountId = None,
        num_miner: int = None,
        votes: List[int] = None,
        allow_subscription: bool = None,
        price_per_subscribe: DecentAsset = None,
        subscription_period: int = None,
    ) -> None:
        self.memo_key = memo_key
        self.voting_account = voting_account
        self.num_miner = num_miner
        self.votes = votes if votes is not None else []
        self.allow_subscription = allow_subscription
        self.price_per_subscribe = price_per_subscribe
        self.subscription_period = subscription_period

    @classmethod
    def get_fields(cls):
        return {
            1: ('memo_key', p.BytesType, 0),
            2: ('voting_account', DecentAccountId, 0),
            3: ('num_miner', p.UVarintType, 0),
            4: ('votes', p.UVarintType, p.FLAG_REPEATED),
            5: ('allow_subscription', p.BoolType, 0),
            6: ('price_per_subscribe', DecentAsset, 0),
            7: ('subscription_period', p.UVarintType, 0),
        }
